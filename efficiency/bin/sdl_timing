#!/bin/bash

run_gpu()
{
    version=$1
    sample=$2
    nevents=$3
    shift
    shift
    shift
    # GPU unified
    sdl_make_tracklooper -m $*
    sdl -n ${NEVENTS} -o ${OUTDIR}/gpu_${version}_s1.root -v 1 -w 0 -i ${sample} | tee -a timing_temp.txt
    sdl -n ${NEVENTS} -o ${OUTDIR}/gpu_${version}_s2.root -v 1 -w 0 -s 2 -i ${sample} | tee -a timing_temp.txt
    sdl -n ${NEVENTS} -o ${OUTDIR}/gpu_${version}_s4.root -v 1 -w 0 -s 4 -i ${sample} | tee -a timing_temp.txt
    sdl -n ${NEVENTS} -o ${OUTDIR}/gpu_${version}_s6.root -v 1 -w 0 -s 6 -i ${sample} | tee -a timing_temp.txt
    sdl -n ${NEVENTS} -o ${OUTDIR}/gpu_${version}_s8.root -v 1 -w 0 -s 8 -i ${sample} | tee -a timing_temp.txt
}

run_timing_test_usage()
{
    echo "ERROR - Usage:"
    echo
    echo "      sh $(basename $0) SAMPLETYPE [SPECIFICGPUVERISON] [NEVENTS]"
    echo
    echo "Arguments:"
    echo "   SAMPLETYPE                          muonGun, PU200, or pionGun"
    echo "   SPECIFICGPUVERSION (optional)       Run only one of the unified, unified_cache, ... , explicit, explicit_newgrid, ... , etc."
    echo "                                       If nothing provided, then it checks all possible tests."
    echo "   NEVENTS            (optional)       200, 10000, -1, etc."
    echo ""
    exit
}

# Parsing command-line opts
while getopts ":h" OPTION; do
  case $OPTION in
    h) usage;;
    :) usage;;
  esac
done

# Shift away the parsed options
shift $(($OPTIND - 1))

if [ -z ${1} ]; then run_timing_test_usage; fi

SAMPLE=${1}
if [[ ${SAMPLE} == *"pionGun"* ]]; then
    PDGID=211
elif [[ ${SAMPLE} == *"muonGun"* ]]; then
    PDGID=13
elif [[ ${SAMPLE} == *"PU200"* ]]; then
    PDGID=0
fi

SPECIFICGPUVERSION=${2}

if [ -z ${3} ]; then
    NEVENTS=200 # If no number of events provided, validate on first 200 events
    if [[ ${SAMPLE} == *"PU200"* ]]; then
        NEVENTS=200 # If PU200 then run 30 events
    fi
else
    NEVENTS=${3} # If provided set the NEVENTS
fi

pushd ${TRACKLOOPERDIR}
GITHASH=$(git rev-parse --short HEAD)
DIRTY=""
DIFF=$(git diff)
if [ -z "${DIFF}" ]; then
    DIRTY=""
else
    DIRTY="DIRTY"
fi
popd
GITHASH=${GITHASH}${DIRTY}

OUTDIR=output/outputs_${GITHASH}_${SAMPLE}

# Verbose
echo "*****************************************************"
echo ""
echo ""
echo "Run LST Timing Program                               "
echo ""
echo ""
echo "*****************************************************"
echo ""
echo "  GITHASH              : ${GITHASH}"
echo "  SAMPLE               : ${SAMPLE}"
echo "  NEVENTS              : ${NEVENTS}"
if [ -n ${SPECIFICGPUVERSION} ]; then
echo "  SPECIFICGPUVERSION   : ${SPECIFICGPUVERSION}"
else
echo "  SPECIFICGPUVERSION   : all configurations"
fi
echo ""

## Delete old run
rm -rf ${OUTDIR}
mkdir -p ${OUTDIR}
rm -f timing_temp.txt

# Run different GPU configurations
if [[ "${SPECIFICGPUVERSION}" == "unified" ]]; then
    run_gpu unified ${SAMPLE} ${NEVENTS} -8 -e -l
    :
fi
if [[ "${SPECIFICGPUVERSION}" == "unified_cache" ]]; then
    run_gpu unified_cache ${SAMPLE} ${NEVENTS} -c -8 -e -l
    :
fi
if [ -z ${SPECIFICGPUVERSION} ] || [[ "${SPECIFICGPUVERSION}" == "explicit" ]]; then
    run_gpu explicit ${SAMPLE} ${NEVENTS} -x -8 -e -l
    :
fi
if [ -z ${SPECIFICGPUVERSION} ] || [[ "${SPECIFICGPUVERSION}" == "explicit_cache" ]]; then
     run_gpu explicit_cache ${SAMPLE} ${NEVENTS} -x -c -8 -e -l 
    :
fi

echo "Total Timing Summary"
echo "   Evt    Hits       MD       LS      T3       T5       pLS       pT5      pT3      TC       TCE      Event      Short           Loop      Effective"
grep -hr "avg " timing_temp.txt # space is needed to not get certain bad lines 
